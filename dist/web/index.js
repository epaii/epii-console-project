"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const html = `<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport"content="width=device-width, initial-scale=1.0"><title>控制台</title></head><style scoped>html,body{margin:0;padding:0;width:100%;background-color:#0d1117}.msg-title{font-size:25px;text-align:center;padding:0px 0px 0px;color:#fff}.scrollbar{display:flex;justify-content:center}.scroll-fix button{outline:none;border:1px solid#dddddd;color:#fff;background:transparent;width:80px;height:35px;border-radius:3px;margin-bottom:10px;cursor:pointer}.scroll-fix button:hover{background-color:#313131;cursor:pointer}</style><body><p class="msg-title"id="msgTitle">F12打开控制台查看日志</p><div class="scrollbar"><div class="scroll-fix"><button onclick="doStop(this)">暂停</button><br/><button onclick="doClear(false)"ondblclick="doClear(true)">清空</button></div></div><script>window.EpiiConsoleConfig={api:"console?app=receive&",clearApi:"console?app=clear"};window.EpiiConsole=(function(){let config={apiBase:"../",interval:1000};let receiveHanlder=[];const out={enable:true,lastId:"-1",ajax:{async getText(uri){return(await fetch(config.apiBase+uri,{mode:'cors',})).text()},async get(uri){return(await fetch(config.apiBase+uri,{mode:'cors',})).json()},async post(uri,data={}){return(await fetch(config.apiBase+uri,{method:'post',body:JSON.stringify(data),headers:{'Content-Type':'application/json'}})).json()}},api:{async get(uri){let ret=await out.ajax.get(uri);if(ret.code-1===0){return ret.data}else{throw new Error(ret.msg);}}},sleep(time){return new Promise(r=>setTimeout(r,time))},setConfig(c){Object.assign(config,c);return this},onReceive(handler){receiveHanlder.push(handler);return this},async callReceiveHandler(element){for(let j=0;j<receiveHanlder.length;j++){await receiveHanlder[j](element)}},async __notice(ret){if(ret.lastId!=this.lastId){this.lastId=ret.lastId;if(receiveHanlder.length>0){for(let index=ret.logs.length-1;index>=0;index--){const element=ret.logs[index];await this.callReceiveHandler(element)}}}},async start(){do{if(receiveHanlder.length>0){break}await this.sleep(100)}while(true);await this.__notice(await this.api.get(window.EpiiConsoleConfig.api));do{if(this.enable){try{await this.__notice(await this.api.get(window.EpiiConsoleConfig.api+"&lastId="+this.lastId))}catch(error){await this.callReceiveHandler({msg:"链接Rpa服务失败，请查看Rpa程序是否正常运行，10秒后自动重试",color:"red",time:Date.now()});await this.sleep(10000)}}await this.sleep(config.interval)}while(true)},async clear(){await this.api.get(window.EpiiConsoleConfig.clearApi)},stop(){this.enable=!this.enable}};return out})();async function start(){window.EpiiConsole.onReceive(function(message){try{let _time=new Date(message.time).toLocaleString();console[message.level](message.msg,message.tag,_time)}catch(error){console.log(error)}}).start()}function doClear(serverClearr){console.clear();if(serverClearr){if(window.confirm("确定要清除服务日志吗")){window.EpiiConsole.clear()}}}function doStop(button){window.EpiiConsole.stop();if(button.innerText==="暂停"){button.innerText="继续"}else{button.innerText="暂停"}}start();</script></body></html>`;
exports.default = html;
